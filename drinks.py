import json
import random
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º drinks.json
BASE_PATH = os.path.dirname(__file__)
JSON_PATH = os.path.join(BASE_PATH, "drinks.json")

with open(JSON_PATH, "r", encoding="utf-8") as f:
    DRINKS = json.load(f)


def normalize_name(name: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ: —É–±–∏—Ä–∞–µ—Ç —Å–∫–æ–±–∫–∏, –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É"""
    return name.strip().lower().replace("<", "").replace(">", "").replace("¬´", "").replace("¬ª", "")

def get_info(name: str) -> str:
    key = normalize_name(name)
    for drink in DRINKS:
        if normalize_name(drink) == key:
            return DRINKS[drink]["info"]
    return f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

def get_recipe(name: str) -> str:
    key = normalize_name(name)
    for drink in DRINKS:
        if normalize_name(drink) == key:
            return DRINKS[drink]["recipe"]
    return f"–†–µ—Ü–µ–ø—Ç –¥–ª—è '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω."


def get_by_ingredient(ingredient: str) -> str:
    ingredient = ingredient.lower()
    results = []
    for name, data in DRINKS.items():
        if ingredient in data["recipe"].lower():
            results.append(name.title())
    if results:
        return "–ö–æ–∫—Ç–µ–π–ª–∏ —Å —ç—Ç–∏–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º:\n" + "\n".join(results)
    return f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–∫—Ç–µ–π–ª–µ–π —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º '{ingredient}'."


def get_random() -> str:
    name = random.choice(list(DRINKS.keys()))
    return f"{name.title()} ‚Äî {DRINKS[name]['info']}"

def get_all_drinks() -> str:
    drink_list = sorted([name for name in DRINKS.keys()])
    lines = ["üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏:\n"]
    for name in drink_list:
        emoji = "üçπ" if "–∫–æ–∫—Ç–µ–π–ª—å" in name.lower() else (
            "üçµ" if "—á–∞–π" in name.lower() else (
                "üçã" if "–ª–∏–º–æ–Ω–∞–¥" in name.lower() or "—Ü–∏—Ç—Ä—É—Å–æ–≤—ã–π" in name.lower() else (
                    "ü•§" if "–Ω–∞–ø–∏—Ç–æ–∫" in name.lower() or "—Å–º—É–∑–∏" in name.lower() else "üßä"
                )
            )
        )
        lines.append(f"{emoji} {name}")
    return "\n".join(lines)
